---
title: "Jupyter Notebooks en el entorno laboral"
subtitle: "¿Herramienta o trampa?"
author: "en_coders: Rodo, Chris, Mati"
date: last-modified
date-format: "DD-MM-YYYY"
title-block-banner: "#27445C"
# title-slide-attributes:
#     data-background-image: figures/TripleTen_Backgrownd.png
#     data-background-size: contain
#     data-background-opacity: "0.03"
format:
  revealjs:
    slide-number: true
    logo: figures/Logo_principalEncoders.jpg
    css: logo.css
  # html:
    # embed-resources: true
    # smooth-scroll: true
    # theme: cosmo
    # fontcolor: black
    # toc: true
    # toc-location: left
    # toc-title: Summary
    # toc-depth: 3
    # css: styles.css
editor: source
---

# Jupyter Notebooks en el entorno laboral

## Contexto y motivación

-   Jupyter Notebook es un tipo particular de Notebooks
-   Cuál es la utilidad de los notebooks?
-   Video de Joel
-   Esto es aplicable a más que solo datos

![](figures/reproducibility.png){.fragment .absolute width=60% height=50% top=350 right=300}


<!-- TODO Mati -->

## Por qué JN es tan popular

- Es la herramienta que típicamente usa la gente para enseñar
- A los profesores les es muy cómodo recibir las respuestas sin ejecutar el código, y así no se tienen que preocupar de la reproducibilidad del código.

<!-- TODO Chris -->

## Pros de Jupyter Notebook

<!-- TODO Mati -->

-   Fácil de comenzar a programar
-   Estéticamente bonito para varios
-   Fácil de leer el output

Ninguno de esos pros es fundamental en un ambiente laboral

## Contras de Jupyter Notebook

<!-- TODO Chris -->
:::{.fragment}
### No es posible <span style="color:blue;"> trackear cambios</span> con Git

![](figures/ops_problem_girl.jpg){.fragment .absolute width=50% height=50% top=200 right=-150}


-   JSON
:::

<!-- TODO Chris -->

:::{.fragment}
### <span style="color:blue;">Orden de ejecución </span>

-   Reproducibilidad
:::

<!-- TODO Chris -->

## Contras de Jupyter Notebook {.placeholder-for-titleSlide visibility="uncounted"}

:::{.fragment}
### <span style="color:blue;"> Datos sensibles</span> publicados

-   Seguridad
-   JSON
:::

<!-- TODO Chris -->


:::{.fragment}
### Las celdas te obligan a <span style="color:blue;"> ejecutarlas enteras</span>

-   Debugging
:::


## Contras de Jupyter Notebook {.placeholder-for-titleSlide visibility="uncounted"}
<!-- TODO Rodo -->

:::{.fragment}
### Los <span style="color:blue;"> ambientes virtuales</span> de los JN y de la terminal son distintos

- Debugging
:::


:::{.fragment}
### Hay <span style="color:blue;"> funciones que existen solo para JN</span> y darán error fuera de ese contexto

- Producción
:::

## Contras de Jupyter Notebook {.placeholder-for-titleSlide visibility="uncounted"}
:::{.fragment}
### No puedes usar <span style="color:blue;"> multilenguaje </span>

- Flexibilidad
:::

:::{.fragment}
### Dependiendo del ambiente de desarrollo, podrías no tener <span style="color:blue;"> linting, intellisense y otras herramientas fundamentales</span>


- Facilidad de programación
- Debugging
:::

## Contras de Jupyter Notebook {.placeholder-for-titleSlide visibility="uncounted"}
:::{.fragment}
### Por defecto, los JN se ejecutan <span style="color:blue;"> partiendo de la ruta del archivo</span>

- Reproducibilidad
- Es configurable, pero hay que hacerlo

:::


<!-- TODO Rodo Revisar si sigue siendo así en las últimas versiones  -->

:::{.fragment}
### Otros
:::


## Alternativas, sus pros y contras

### <span style="color:blue;">Jupyter Lab</span>

![](figures/JL.JPG){.fragment .absolute width=70% height=50% top=100 right=-150}



:::{.fragment}
- Pros encontrados
    
      - Debugger
      - Run relected text
      - Intellisense
      - Plots no detienen el progreso
      - Tablas bien visualizadas 
:::

:::{.fragment}
- Contras encontrados:
    
      - Ambientes distintos
      - Multilenguaje
      - Linting
      - Formato JSON de archivos 
      - Versionado con Git
      - Seguridad
      - Reproducibilidad por orden de ejecución
:::

<!-- TODO Rodo -->

## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}

### <span style="color:blue;">Usar celdas en .py</span>

![](figures/py_con_celdas.JPG){.fragment .absolute width=50% height=50% top=200 right=-150}

:::{.fragment}
- Pros encontrados

      - Debugger
      - Run relected text
      - Intellisense
      - Linting
      - Versionado con Git
      - Seguridad
      - Reproducibilidad por orden de ejecución
      - Formato JSON de archivos 
      - Plots no detienen el progreso
      - Tablas bien visualizadas 
:::

:::{.fragment}
- Contras encontrados:
    
      - Multilenguaje
      - Ambientes distintos
:::

## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}

### <span style="color:blue;">Usar solo scripts .py en Visual Studio Code</span>

![](figures/py_sin_celdas.JPG){.fragment .absolute width=50% height=50% top=200 right=-150}

:::{.fragment}
- Pros encontrados

      - Debugger
      - Run relected text
      - Intellisense
      - Linting
      - Versionado con Git
      - Seguridad
      - Reproducibilidad por orden de ejecución
      - Formato JSON de archivos 
      - Ambientes distintos
:::

:::{.fragment}
- Contras encontrados:
    
      - Multilenguaje
      - Plots bloqueando progreso
      - Visualización de tablas
:::

## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}

### <span style="color:blue;">Usar solo scripts .py en Visual Studio Code</span>

![](figures/py_sin_celdas.JPG){.absolute width=50% height=50% top=200 right=-150}

- Demo .py en Visual Studio Code
- Configuración necesaria


## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}

### <span style="color:blue;">nbdev</span>

![](figures/nbdev.png){.fragment .absolute width=50% height=40% top=300 right=-30}

:::{.fragment}
- Pros encontrados
    
      - Debugger
      - Run relected text
      - Intellisense
      - Seguridad
      - Plots no detienen el progreso
      - Tablas bien visualizadas 
:::

:::{.fragment}
- Contras encontrados:
    
      - Ambientes distintos
      - Multilenguaje
      - Linting
      - Formato JSON de archivos 
      - Versionado con Git
      - Reproducibilidad por orden de ejecución
:::

## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}
### <span style="color:blue;">nbdev</span> {visibility="uncounted"}

![](figures/nbdev.png){.absolute width=50% height=40% top=300 right=-30}

<!-- TODO Rodo  -->
:::{.fragment}
-   Forma de desarrollar con JNs construida sobre Quarto
:::

## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}

### <span style="color:blue;">Quarto</span>

![](figures/Quarto-blog-v3.jpg){.fragment .absolute width=40% height=30% top=200 right=0}




:::{.fragment}
- Pros encontrados

      - Debugger
      - Run relected text
      - Intellisense
      - Seguridad
      - Ambientes distintos
      - Multilenguaje
      - Linting
      - Formato JSON de archivos 
      - Versionado con Git
      - Reproducibilidad por orden de ejecución
      - Plots no detienen el progreso
      - Tablas bien visualizadas 
:::

:::{.fragment}
- Contras encontrados:

      - Nada
:::

<!-- TODO Rodo  -->

## Alternativas, sus pros y contras {.placeholder-for-titleSlide visibility="uncounted"}

### <span style="color:blue;">Quarto</span>

![](figures/Quarto-blog-v3.jpg){ .absolute width=40% height=30% top=200 right=0}


#### Demo

-   Cómo trabajar en archivos .py
-   Cómo ver datasets y plots
-   Cómo hacer reportes y notebooks
-   Cómo programar en multilenguaje
-   Cómo hacer presentaciones
-   Enfocarse en el contenido y el formato después

## Cierre

:::{.fragment .fade-up}
- JN es una herramienta sub-óptima en todo aspecto, pero en donde más se nota es en un ambiente laboral.
:::

:::{.fragment .fade-up}
- Sin embargo, que no sea tan riesgoso al estar aprendiendo, hace que genere vicios que después es deifícil sacarse.
:::

## Cierre {.placeholder-for-titleSlide visibility="uncounted"}

:::{.fragment .fade-up}
- Hay otras herramientas estrictamente superiores, algunas mejores que otras. Mi favorita es Quarto, que tiene todas las ventajas y ninguna desventaja.
:::

:::{.fragment .fade-up}
- Para qué complicarse la vida con deuda técnica y decir "solo estoy haciendo un EDA", si podemos hacer las cosas escalables y preproducibles desde el comienzo?
:::

![](figures/thats_the_neat.jpg){.fragment .absolute  top=0 right=200}


## Referencias

![](figures/noted.png){.fragment width="350" height="200" fig-align="center"}

<!-- TODO Rodo -->

:::{.fragment}

    -   https://www.youtube.com/watch?v=7jiPeIFXb6U
    -   https://www.youtube.com/watch?v=3Fa6uzHxTkQ
    -   https://www.youtube.com/watch?v=1ISrRp6n2Tg&pp=ygUTam9lbCBncnVzIG5vdGVib29rcw%3D%3D
    -   https://www.youtube.com/watch?v=9Q6sLbz37gk&pp=ygUTam9lbCBncnVzIG5vdGVib29rcw%3D%3D
    -   https://nbdev.fast.ai/
    -   https://www.youtube.com/watch?v=l7zS8Ld4_iA
    -   https://www.youtube.com/@howardjeremyp
    -   https://quarto.org/

:::





<!-- ## Tareas -->

<!-- TODO Mati Buscar cómo visualizar tablas en VSCode -->

<!-- TODO Chris Investigar cuál es la razón por la que muchas empresas usar JN en sus infraestructuras -->

<!-- TODO Mati y Rodo usar nvdev -->